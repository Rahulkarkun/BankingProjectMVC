@model IEnumerable<BankingProjectMVC.ViewModels.AccountVM>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@

<body style="background: linear-gradient(to right, #4e54c8, #8f94fb); color: black; padding: 10px; margin-top: 20px; overflow-x: hidden;">

    <style>
        #grid-container {
            overflow-x: auto; /* Add horizontal scrollbar for the container */
            margin-left: 20px; /* Add left margin to create space on the left */
        }

        #grid {
            background-color: inherit;
            color: white;
            border-radius: 10px;
            width: 100%; /* Set table width to 100% */
        }
    </style>

    <link href="~/Content/themes/base/jquery.ui.all.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/jquery.jqGrid/ui.jqgrid.css" rel="stylesheet" type="text/css" />
    <script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-ui-1.10.0.min.js"></script>
    <script src="~/Scripts/i18n/grid.locale-en.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.jqGrid.min.js" type="text/javascript"></script>
    <script src="~/Scripts/myjqgrid.js" type="text/javascript"></script>

    <button id="btnTest" class="btn btn-success">@Html.ActionLink("Create Account", "Create", "Account", null, new { style = "color: white;" })</button>
    <br />
    <br />

    <div id="grid-container">
        <table id="AccountGrid"></table>
    </div>
    <div id="AccountPager"></div>

</body>

@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.AccountNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AccountTypeId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Balance)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CustomerId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TransactionsCount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.AccountNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AccountTypeId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Balance)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CustomerId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TransactionsCount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>*@
